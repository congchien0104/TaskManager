[{"C:\\Users\\User\\my-react\\src\\reportWebVitals.js":"1","C:\\Users\\User\\my-react\\src\\App.js":"2","C:\\Users\\User\\my-react\\src\\components\\TaskForm.js":"3","C:\\Users\\User\\my-react\\src\\components\\Control.js":"4","C:\\Users\\User\\my-react\\src\\components\\Search.js":"5","C:\\Users\\User\\my-react\\src\\components\\Sort.js":"6","C:\\Users\\User\\my-react\\src\\components\\TaskList.js":"7","C:\\Users\\User\\my-react\\src\\components\\TaskItem.js":"8","C:\\Users\\User\\my-react\\src\\reducers\\index.js":"9","C:\\Users\\User\\my-react\\src\\reducers\\tasks.js":"10","C:\\Users\\User\\my-react\\src\\constants\\ActionTypes.js":"11","C:\\Users\\User\\my-react\\src\\actions\\index.js":"12","C:\\Users\\User\\my-react\\src\\reducers\\isDisplayForm.js":"13","C:\\Users\\User\\my-react\\src\\index.js":"14","C:\\Users\\User\\my-react\\src\\reducers\\itemEditing.js":"15","C:\\Users\\User\\my-react\\src\\reducers\\filterTable.js":"16","C:\\Users\\User\\my-react\\src\\reducers\\search.js":"17","C:\\Users\\User\\my-react\\src\\reducers\\sort.js":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":6218,"mtime":1606927095270,"results":"21","hashOfConfig":"20"},{"size":4734,"mtime":1606919786859,"results":"22","hashOfConfig":"20"},{"size":513,"mtime":1606927205940,"results":"23","hashOfConfig":"20"},{"size":1971,"mtime":1606923405506,"results":"24","hashOfConfig":"20"},{"size":3204,"mtime":1606927735707,"results":"25","hashOfConfig":"20"},{"size":4992,"mtime":1606928215637,"results":"26","hashOfConfig":"20"},{"size":2516,"mtime":1606883966788,"results":"27","hashOfConfig":"20"},{"size":478,"mtime":1606926831749,"results":"28","hashOfConfig":"20"},{"size":1973,"mtime":1606915662219,"results":"29","hashOfConfig":"20"},{"size":441,"mtime":1606926532495,"results":"30","hashOfConfig":"20"},{"size":1230,"mtime":1606926614020,"results":"31","hashOfConfig":"20"},{"size":424,"mtime":1606882228264,"results":"32","hashOfConfig":"20"},{"size":807,"mtime":1606837332453,"results":"33","hashOfConfig":"20"},{"size":344,"mtime":1606918501871,"results":"34","hashOfConfig":"20"},{"size":440,"mtime":1606921724554,"results":"35","hashOfConfig":"20"},{"size":292,"mtime":1606925124986,"results":"36","hashOfConfig":"20"},{"size":408,"mtime":1606927615975,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7f14bn",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\my-react\\src\\reportWebVitals.js",[],"C:\\Users\\User\\my-react\\src\\App.js",["76","77"],"\nimport './App.css';\nimport { Component } from 'react';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //isDisplayForm : false,\n      //taskEditing : null,\n      // filter : {\n      //   name : '',\n      //   status : -1\n      // },\n      keyword : '',\n      sortBy : 'name',\n      sortValue : 1\n    }\n  }\n\n\n  onToggleForm =() =>{ // Thêm task\n    // if(this.state.isDisplayForm && this.state.taskEditing !== null){\n    //   this.setState({\n    //     isDisplayForm : true,\n    //     taskEditing : null\n    //   });\n    // }else{\n    //   this.setState({\n    //     isDisplayForm : !this.state.isDisplayForm,\n    //     taskEditing : null\n    //   });\n    // }\n    var { itemEditing } = this.props;\n    if(itemEditing && itemEditing.id !== ''){\n      this.props.onOpenForm();\n\n    }else{\n      this.props.onToggeForm();\n    }\n    this.props.onClearTask({\n      id : '',\n      name : '',\n      status : false\n    });\n  }\n\n  // onCloseForm = () =>{\n  //   this.setState({\n  //     isDisplayForm : false\n  //   });\n  // }\n\n  onShowForm = () =>{\n    this.setState({\n      isDisplayForm : true\n    });\n  }\n\n  \n  // onUpdateStatus = (id) =>{\n  //   var { tasks } = this.state;\n  //   var index = this.findIndex(id);\n  //   if(index !== -1){\n  //     tasks[index].status = !tasks[index].status;\n  //     this.setState({\n  //       tasks : tasks\n  //     });\n  //     localStorage.setItem('tasks', JSON.stringify(tasks));\n  //   }\n  // }\n\n  findIndex = (id) =>{\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) =>{\n      if(task.id === id){\n        result = index;\n      }\n    });\n    return result;\n  }\n\n  // onDelete = (id) =>{\n  //   var { tasks } = this.state;\n  //   var index = this.findIndex(id);\n  //   if(index !== -1){\n  //     tasks.splice(index, 1);\n  //     this.setState({\n  //       tasks : tasks\n  //     });\n  //     localStorage.setItem('tasks', JSON.stringify(tasks));\n  //   }\n  //   this.onCloseForm();\n  // }\n\n  // onUpdate = (id) =>{\n  //   var { tasks } = this.state;\n  //   var index = this.findIndex(id);\n  //   var taskEditing = tasks[index];\n  //   this.setState({\n  //     taskEditing : taskEditing\n  //   });\n  //   this.onShowForm();\n  // }\n\n  // onFilter = (filterName, filterStatus) =>{\n  //   //console.log(filterName + '-' + filterStatus);\n  //   filterStatus = parseInt(filterStatus, 10);\n  //   //console.log(typeof filterStatus);\n  //   this.setState({\n  //     filter : {\n  //       name : filterName.toLowerCase(),\n  //       status : filterStatus\n  //     }\n  //   });\n\n  // }\n\n  onSearch = (keyword) =>{\n    this.setState({\n      keyword : keyword.toLowerCase()\n    });\n  }\n\n  onSort = (sortBy, sortValue) =>{\n    this.setState({\n      sortBy : sortBy,\n      sortValue : sortValue\n    });\n  }\n\n\n  render() {\n    var {\n        //isDisplayForm, \n        //taskEditing, \n        //filter, \n        //keyword,\n        sortBy,\n        sortValue\n    } = this.state    // var tasks = this.state.tasks\n\n    var { isDisplayForm } = this.props;\n    // if(filter){\n    //   if(filter.name){\n    //     tasks = tasks.filter((task) =>{\n    //       return task.name.toLowerCase().indexOf(filter.name) !== -1;\n    //     });\n    //   }\n    //   tasks = tasks.filter((task) =>{\n    //     if(filter.status === -1){\n    //       return task;\n    //     }else{\n    //       return task.status === (filter.status === 1 ? true : false);\n    //     }\n    //   });\n    // }\n\n    // if(keyword){\n    //   tasks = tasks.filter((task) =>{\n    //     return task.name.toLowerCase().indexOf(keyword) !== -1;\n    //   });\n    // }\n    // if(sortBy === 'name'){\n    //   tasks.sort((a, b) => {\n    //     if(a.name > b.name) return sortValue;\n    //     else if(a.name < b.name) return -sortValue;\n    //     else return 0;\n    //   })\n    // }else{\n    //   tasks.sort((a, b) => {\n    //     if(a.status > b.status) return -sortValue;\n    //     else if(a.status < b.status) return sortValue;\n    //     else return 0;\n    //   })\n    // }\n    // var elmTaskForm = isDisplayForm ? \n    //   <TaskForm\n    //             onSubmit={ this.onSubmit }\n    //             task={ taskEditing }\n    //   /> : '';\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div className={ isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n            \n            <TaskForm\n                onSubmit={ this.onSubmit }\n                //task={ taskEditing }\n            />\n          </div>\n          <div className={ isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" :\n                                            \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button \n              type=\"button\" \n              className=\"btn btn-primary\"\n              onClick={ this.onToggleForm }\n            >\n              <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n            </button>\n            <Control \n              //onSearch={ this.onSearch }\n              //onSort={ this.onSort }\n              //sortBy={ sortBy }\n              //sortValue= { sortValue }\n            />\n            <TaskList \n              //onUpdateStatus={ this.onUpdateStatus }\n              //onDelete={ this.onDelete }\n              //onUpdate={ this.onUpdate }\n              //onFilter={ this.onFilter }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    isDisplayForm : state.isDisplayForm,\n    itemEditing : state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) =>{\n  return {\n    onToggeForm : () =>{\n      dispatch(actions.toggleForm())\n    },\n    onClearTask : (task) =>{\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm : () =>{\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);\n","C:\\Users\\User\\my-react\\src\\components\\TaskForm.js",[],["78","79"],"C:\\Users\\User\\my-react\\src\\components\\Control.js",[],"C:\\Users\\User\\my-react\\src\\components\\Search.js",[],"C:\\Users\\User\\my-react\\src\\components\\Sort.js",["80","81","82","83"],"C:\\Users\\User\\my-react\\src\\components\\TaskList.js",[],"C:\\Users\\User\\my-react\\src\\components\\TaskItem.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\index.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\tasks.js",[],"C:\\Users\\User\\my-react\\src\\constants\\ActionTypes.js",[],"C:\\Users\\User\\my-react\\src\\actions\\index.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\isDisplayForm.js",[],"C:\\Users\\User\\my-react\\src\\index.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\itemEditing.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\filterTable.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\search.js",[],"C:\\Users\\User\\my-react\\src\\reducers\\sort.js",[],{"ruleId":"84","severity":1,"message":"85","line":145,"column":9,"nodeType":"86","messageId":"87","endLine":145,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":146,"column":9,"nodeType":"86","messageId":"87","endLine":146,"endColumn":18},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":22,"column":29,"nodeType":"95","endLine":27,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":34,"column":29,"nodeType":"95","endLine":39,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":47,"column":29,"nodeType":"95","endLine":49,"endColumn":35},{"ruleId":"93","severity":1,"message":"94","line":51,"column":29,"nodeType":"95","endLine":53,"endColumn":35},"no-unused-vars","'sortBy' is assigned a value but never used.","Identifier","unusedVar","'sortValue' is assigned a value but never used.","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]